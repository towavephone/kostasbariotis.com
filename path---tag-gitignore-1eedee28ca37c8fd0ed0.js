webpackJsonp([0xc8bdb0858020],{1292:function(a,t){a.exports={data:{site:{siteMetadata:{title:"女王控的博客",description:'前端工程师，黑猫女王控，欢迎勾搭，技术相关<a href="https://github.com/towavephone" target="_blank">@towavephone</a>，QQ闲聊<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=634407147&website=www.oicqzone.com">@towave</a>，bili关注<a href="https://space.bilibili.com/11507708#/" target="_blank">@towave</a>',siteUrl:"https://blog.towavephone.com"}}},pathContext:{posts:[{excerpt:"案例 在 git 中如果想忽略掉某个文件，不让这个文件提交到版本库中，可以使用修改根目录中 .gitignore 文件的方法（如无，则需自己手工建立此文件）。这个文件每一行保存了一个匹配的规则例如： 规则很简单，不做过多解释，但是有时候在项目开发过程中，突然心血来潮想把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是.gitignore 只能忽略那些原来没有被 track 的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore…",html:'<h2 id="案例"><a href="#%E6%A1%88%E4%BE%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>案例</h2>\n<blockquote>\n<p>在 git 中如果想忽略掉某个文件，不让这个文件提交到版本库中，可以使用修改根目录中 .gitignore 文件的方法（如无，则需自己手工建立此文件）。这个文件每一行保存了一个匹配的规则例如：</p>\n</blockquote>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="64572326126733180000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`# 此为注释 – 将被 Git 忽略\n*.a       # 忽略所有 .a 结尾的文件\n!lib.a    # 但 lib.a 除外\n/TODO     # 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO\nbuild/    # 忽略 build/ 目录下的所有文件\ndoc/*.txt # 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt`, `64572326126733180000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                \n              >\n                bash 复制代码\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash"><span class="token comment"># 此为注释 – 将被 Git 忽略</span>\n*.a       <span class="token comment"># 忽略所有 .a 结尾的文件</span>\n<span class="token operator">!</span>lib.a    <span class="token comment"># 但 lib.a 除外</span>\n/TODO     <span class="token comment"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span>\nbuild/    <span class="token comment"># 忽略 build/ 目录下的所有文件</span>\ndoc/*.txt <span class="token comment"># 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>规则很简单，不做过多解释，但是有时候在项目开发过程中，突然心血来潮想把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是.gitignore 只能忽略那些原来没有被 track 的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore 是无效的。那么解决方法就是先把本地缓存删除（改变成未 track 状态），然后再提交：</p>\n</blockquote>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="8564403727508552000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`git rm -r --cached .\ngit add .\ngit commit -m \'update .gitignore\'`, `8564403727508552000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                \n              >\n                bash 复制代码\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> -r --cached <span class="token builtin class-name">.</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> commit -m <span class="token string">\'update .gitignore\'</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>如果有些文件已经被你忽略了，当你使用 git add 时是无法添加的，比如我忽略了*.class，现在我想把 HelloWorld.class 添加到 git 中去：git 会提示我们这个文件已经被我们忽略了，需要加上-f 参数才能强制添加到 git 中去：</p>\n</blockquote>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="69223329240169914000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`\\$ git add HelloWorld.class\nThe following paths are ignored by one of your .gitignore files:\nHelloWorld.class\nUse -f if you really want to add them.`, `69223329240169914000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                \n              >\n                bash 复制代码\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash">$ <span class="token function">git</span> <span class="token function">add</span> HelloWorld.class\nThe following paths are ignored by one of your .gitignore files:\nHelloWorld.class\nUse -f <span class="token keyword">if</span> you really want to <span class="token function">add</span> them.</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>如果我们意外的将想要忽略的文件添加到缓存中去了，我们可以使用 rm 命令将其从中移除，不会删除本地文件：</p>\n</blockquote>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="35351511598312910000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`\\$ git rm HelloWorld.class --cached\nrm \'HelloWorld.class\'`, `35351511598312910000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                \n              >\n                bash 复制代码\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash">$ <span class="token function">git</span> <span class="token function">rm</span> HelloWorld.class --cached\n<span class="token function">rm</span> <span class="token string">\'HelloWorld.class\'</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span></span></pre></div>\n<h2 id="查看-gitignore-规则"><a href="#%E6%9F%A5%E7%9C%8B-gitignore-%E8%A7%84%E5%88%99" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>查看 gitignore 规则</h2>\n<blockquote>\n<p>如果你发现.gitignore 写得有问题，需要找出来到底哪个规则写错了，可以用 git check-ignore 命令检查：</p>\n</blockquote>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="54667905989208990000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`\\$ git check-ignore -v HelloWorld.class\n.gitignore:1:*.class HelloWorld.class`, `54667905989208990000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                \n              >\n                bash 复制代码\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="bash"><pre style="counter-reset: linenumber NaN" class="language-bash line-numbers"><code class="language-bash">$ <span class="token function">git</span> check-ignore -v HelloWorld.class\n.gitignore:1:*.class HelloWorld.class</code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span></span></pre></div>\n<blockquote>\n<p>可以看到 HelloWorld.class 匹配到了我们的第一条*.class 的忽略规则所以文件被忽略了。</p>\n</blockquote>',id:"/github/workspace/blog/gitignore忽略文件/index.md absPath of file >>> MarkdownRemark",timeToRead:1,frontmatter:{date:"2017-11-20 00:15:59",path:"/gitignore-invalid/",tags:"Git, gitignore",title:"Git忽略规则及.gitignore规则不生效的解决办法",draft:null}}],length:1,tag:"gitignore",pagesSum:1,page:1}}}});